/* Extra small devices (phones, 600px and down) */
/* Small devices (portrait tablets and large phones, 600px and up) */
/* Medium devices (landscape tablets, 768px and up) */
.background-wave {
  position: relative;
  width: 100%;
  min-height: 400px;
  background-color: #004253; }

.background-wave:before {
  content: "";
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 350px;
  background: url("./images/hero-background.png");
  background-size: cover;
  background-repeat: no-repeat;
  z-index: 1; }

.section7 {
  position: relative;
  width: 100%;
  height: 181px;
  background-color: #004253;
  overflow: hidden; }

.section7:after {
  content: "";
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 210px;
  background: url("./images/hero-background2.png");
  background-size: cover;
  background-repeat: no-repeat;
  z-index: 2; }

.col {
  overflow: hidden;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .col p {
    background-color: rgba(0, 66, 84, 0.6) !important; }

.col-2 {
  padding-top: 7%;
  padding-bottom: 7%;
  box-sizing: border-box; }
  .col-2 > div:first-of-type {
    margin-bottom: 5%; }
  .col-2 > div:nth-of-type(2n) {
    margin-top: 5%; }
  .col-2 .text {
    margin: 0 7%; }

.top-none {
  padding-top: 0; }

.col-3 {
  width: 55%; }

.background-img-shapes {
  background-color: #004253;
  position: relative;
  overflow: hidden; }
  .background-img-shapes p {
    color: #ffffff; }
  .background-img-shapes h5 {
    color: #ffca05; }
  .background-img-shapes h3 {
    color: #ffffff; }
  .background-img-shapes .img-shape {
    display: none; }
  .background-img-shapes .img-shape:nth-of-type(5) {
    position: absolute;
    transform: rotate(-164deg);
    top: -185px;
    left: 50px; }
  .background-img-shapes .img-shape:nth-of-type(6) {
    position: absolute;
    bottom: -153px;
    left: 25%;
    transform: rotate(-76deg); }
  .background-img-shapes .top {
    display: block; }
  .background-img-shapes .bottom {
    display: block; }
  .background-img-shapes .col-2 {
    width: 320px;
    margin: 0 auto; }
  .background-img-shapes .col-1,
  .background-img-shapes .col-2,
  .background-img-shapes .col-3 {
    padding: 10% 0; }
    .background-img-shapes .col-1 ul,
    .background-img-shapes .col-2 ul,
    .background-img-shapes .col-3 ul {
      z-index: 1; }
    .background-img-shapes .col-1 li,
    .background-img-shapes .col-2 li,
    .background-img-shapes .col-3 li {
      color: #ffffff;
      background-color: rgba(0, 66, 84, 0.6) !important;
      z-index: 999;
      margin-top: 30px;
      color: #ffffff; }

@media only screen and (min-width: 576px) {
  .background-img-shapes .img-shape {
    position: absolute;
    display: block; }
    .background-img-shapes .img-shape svg {
      width: 80%; }
  .background-img-shapes .img-shape:nth-of-type(1) {
    transform: rotate(-120deg);
    top: -48px;
    right: -348px; }
  .background-img-shapes .img-shape:nth-of-type(2) {
    top: 285px;
    right: -238px; }
  .background-img-shapes .img-shape:nth-of-type(3) {
    top: 691px;
    right: -76px; }
  .background-img-shapes .img-shape:nth-of-type(4) {
    top: 815px;
    right: -220px;
    transform: rotate(8deg); }
  .background-img-shapes .img-shape:nth-of-type(n+7) {
    display: none; }
  .background-img-shapes .col-1 {
    width: 308px;
    margin-right: auto;
    padding: 10% 0; }
    .background-img-shapes .col-1 ul {
      margin: 0 15px; }
  .background-img-shapes .col-2 {
    width: 60%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    margin: 0 auto 0 0; }
  .background-img-shapes .col-3 {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    width: 60%;
    margin: 0 auto 0 0; }
    .background-img-shapes .col-3 li {
      width: auto; } }

@media only screen and (min-width: 767px) {
  .background-img-shapes .col-1 {
    width: 60%; }
  .background-img-shapes .col-2 {
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    width: 80%; }
    .background-img-shapes .col-2 li {
      width: 40%;
      padding: 10px 25px; }
  .background-img-shapes .col-3 {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column; }
  .section1.background-wave {
    min-height: 623px; }
  .col-2 {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-align: start;
        align-items: start; }
    .col-2 > div {
      width: 50%; }
      .col-2 > div:first-of-type {
        margin-left: 9%;
        margin-bottom: 0; }
      .col-2 > div:nth-of-type(2n) {
        margin-right: 0;
        margin-top: 0; } }

@media only screen and (min-width: 920px) {
  .background-img-shapes .col-1 {
    margin-right: auto; }
  .background-img-shapes .img-shape:nth-of-type(2) {
    top: 255px; }
  .background-img-shapes .img-shape:nth-of-type(5) {
    top: -177px;
    left: 25%; }
  .background-img-shapes .img-shape:nth-of-type(7) {
    top: -60px;
    left: -362px; }
  .background-img-shapes .img-shape:nth-of-type(8) {
    transform: rotate(77deg);
    left: -330px;
    top: 108px; }
  .background-img-shapes .img-shape:nth-of-type(9) {
    top: 800px;
    left: -60px; }
  .col {
    -ms-flex-direction: row;
        flex-direction: row; } }

@media only screen and (min-width: 1024px) {
  .col-2 {
    -ms-flex-align: normal;
        align-items: normal; }
  .background-img-shapes .col-3 {
    width: 80%;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-pack: end;
        justify-content: flex-end; }
    .background-img-shapes .col-3 li {
      width: auto;
      padding: 0 15px; }
  .section7 {
    height: 228px; }
  .section7:after {
    height: 282px; } }

@media only screen and (min-width: 1280px) {
  .background-img-shapes .img-shape:nth-of-type(n+7) {
    display: block; }
  .background-img-shapes .col-1 {
    width: 60%;
    margin: 0 auto; }
  .background-img-shapes .img-shape:nth-of-type(2) {
    top: 325px; }
  .background-img-shapes .img-shape:nth-of-type(3) {
    right: -76px;
    top: 821px; }
  .background-img-shapes .img-shape:nth-of-type(4) {
    top: 962px; }
  .background-img-shapes .img-shape:nth-of-type(7) {
    left: -326px; }
  .background-img-shapes .img-shape:nth-of-type(8) {
    top: 184px; }
  .background-img-shapes .img-shape svg {
    width: 90%; }
  .background-img-shapes .col-2 {
    -ms-flex-pack: distribute;
        justify-content: space-around;
    margin: auto;
    width: 80%; }
    .background-img-shapes .col-2 li {
      width: 40%; }
  .background-img-shapes .col-3 {
    width: 90%;
    margin: auto;
    -ms-flex-pack: distribute;
        justify-content: space-around; }
    .background-img-shapes .col-3 li {
      width: auto; } }

@media only screen and (min-width: 1280px) {
  .background-wave {
    min-height: 450px; }
  .background-wave:before {
    height: 450px; } }

@media only screen and (min-width: 1362px) {
  .section7 {
    height: 258px; }
  .section7:after {
    height: 316px; } }

.col-4 {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: justify;
      justify-content: space-between; }
  .col-4 article {
    max-width: 305px;
    margin: 0 auto;
    margin-bottom: 30px; }
    .col-4 article:hover {
      box-shadow: 0 4px 18px 0 rgba(207, 204, 200, 0.3); }
    .col-4 article h4 {
      background-color: #ffffff; }

*,
body,
html {
  margin: 0;
  padding: 0;
  font-family: 'Open Sans', sans-serif;
  color: #004253;
  font-size: 14px;
  font-stretch: normal;
  line-height: 2;
  letter-spacing: normal; }

body {
  background-color: #faf9f7; }

a {
  background: transparent;
  color: #ffffff;
  font-family: 'Open Sans', sans-serif;
  font-weight: 800; }
  a:hover {
    color: #94bc52; }

ul,
li {
  text-decoration: none;
  list-style: none;
  display: block;
  font-size: 1em;
  background: transparent;
  color: #ffffff;
  font-family: 'Open Sans', sans-serif;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: 2.13;
  letter-spacing: normal;
  color: #004253; }

h1,
h2,
h3,
h4,
h6 {
  font-weight: 800;
  color: #004253;
  padding: 0 0 1.2em 0; }

h3 {
  text-transform: uppercase; }

h4 {
  padding: 10px 0 10px 10px; }
  h4 a {
    color: #004253; }

h1 {
  font-size: 36px;
  font-weight: 800;
  font-style: normal;
  font-stretch: normal;
  line-height: 0.92;
  letter-spacing: 3.4px; }

h2 {
  font-size: 2.25em;
  text-align: center;
  text-transform: uppercase;
  line-height: 1.22;
  letter-spacing: 3.4px;
  font-weight: 800; }

h3 {
  font-size: 2.125em;
  text-transform: uppercase;
  line-height: 1.29;
  letter-spacing: 3.4px; }

h4 {
  font-size: 2em;
  text-transform: uppercase;
  text-align: right; }

h5 {
  font-size: 1.5em;
  color: #ffca05;
  font-weight: 800;
  letter-spacing: 2.2px;
  text-transform: uppercase; }

h6 {
  font-size: 1.2em;
  text-transform: uppercase;
  text-align: right; }

p {
  font-size: 1em;
  padding-bottom: 1.5625em;
  color: #004253;
  line-height: 1.56; }
  p:last-of-type {
    padding-bottom: 0; }

a {
  font-size: 1.125em;
  text-decoration: none; }

img {
  max-width: 100%;
  vertical-align: bottom;
  width: auto;
  height: auto; }

strong {
  font-weight: 800;
  color: #ffffff; }

small {
  font-size: 14px;
  color: #ffffff; }

label {
  color: #ffffff;
  font-size: 1em;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.63;
  letter-spacing: normal; }

video {
  width: 100%    !important;
  height: auto   !important;
  z-index: 2;
  position: relative; }

.clearfix {
  content: "";
  display: table;
  clear: both; }

.wrapper {
  width: 90%;
  margin: 0 auto; }

.button {
  color: #94bc52;
  text-transform: uppercase;
  padding: 5% 0 5% 5%;
  display: inline; }
  .button a {
    font-weight: normal;
    color: #94bc52;
    font-size: 1em; }
  .button:after {
    content: "\2192";
    padding-right: 10px; }

video,
iframe {
  width: 100%;
  height: 100%;
  border: none;
  position: relative;
  z-index: 999; }

.videoWrapper {
  max-width: 640px;
  height: 420px;
  z-index: 999; }

.padding {
  padding: 5% 0; }

@media only screen and (min-width: 767px) {
  *,
  body,
  html {
    font-size: 16px; } }

@media only screen and (min-width: 1362px) {
  .wrapper {
    max-width: 1300px; } }

.ytp-title-enable-channel-logo .ytp-title {
  display: none !important; }

.ytp-chrome-top, .ytp-chrome-bottom {
  display: none; }

.menuicon div {
  width: 35px;
  height: 5px;
  background-color: #94bc52;
  margin: 6px 0; }

.header {
  background-color: #004253;
  position: relative;
  z-index: 1000;
  padding: 2% 0 2% 2%; }
  .header .wrapper {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center; }
  .header .menu-list {
    height: 100%;
    width: 0;
    position: fixed;
    z-index: 1;
    top: 0;
    left: 0;
    background-color: #ffffff;
    opacity: 0.9;
    overflow-x: hidden;
    transition: 0.5s;
    text-align: center;
    padding-top: 100px; }
    .header .menu-list a {
      padding: 8px 5px;
      display: block;
      color: #004253; }
  .header .close a {
    color: #004253;
    text-align: left;
    font-size: 26px;
    z-index: 999;
    position: absolute;
    transition: 0.5s;
    left: 60px;
    top: 60px;
    padding: 20px; }
  .header .menu-list {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column; }
  .header .navmenu {
    margin-right: auto; }
  .header #lang {
    padding: 30px 0;
    font-size: 18px; }
  .header .logo img {
    width: 180px;
    height: 40px; }

.header-bottom {
  position: relative;
  overflow: hidden;
  background-color: #004253;
  color: #ffffff; }
  .header-bottom .image-shape1 {
    position: absolute;
    bottom: -75px;
    right: -165px;
    transform: rotateY(178deg); }
  .header-bottom .image-shape2 {
    position: absolute;
    right: 817px;
    bottom: -18px;
    transform: rotate(30deg); }
  .header-bottom h1,
  .header-bottom h3 {
    padding-top: 5%;
    color: #94bc52;
    text-align: right;
    vertical-align: center;
    text-transform: uppercase; }
  .header-bottom h3 {
    width: 70%;
    text-transform: none; }

.footer {
  position: relative;
  overflow: hidden;
  padding: 7%;
  background-color: #004253; }
  .footer a {
    font-size: 1em;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    line-height: 2.13;
    letter-spacing: normal; }
  .footer p {
    color: #ffffff; }
  .footer .col {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: center;
        justify-content: center; }
  .footer .yellow-sheet {
    position: absolute;
    right: -100px;
    transform: rotate(46deg); }
  .footer .green-sheet {
    position: absolute;
    left: -120px;
    bottom: 0;
    transform: rotate(-72deg); }
  .footer .last {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column; }
  .footer ul {
    border-bottom: 1px solid rgba(211, 211, 211, 0.34);
    padding-bottom: 5px; }
    .footer ul li:last-child {
      margin-top: auto;
      color: #ffffff; }

#lang {
  background-color: #004253;
  color: #ffffff;
  font-weight: 800;
  border: none;
  margin-right: 10px; }
  #lang option {
    color: #ffffff;
    border: none; }
  #lang select:focus {
    border: 2px solid red; }

@media only screen and (min-width: 480px) {
  .header-bottom .image-shape1 {
    right: -74px; } }

@media only screen and (min-width: 576px) {
  .footer .col {
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-align: normal;
        align-items: normal;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap; }
    .footer .col ul {
      border: none;
      width: 33.3%; } }

@media only screen and (min-width: 767px) {
  .header-bottom .image-shape1 {
    right: 300px; }
  .footer .wrapper span {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    margin-top: 30px; }
  .footer .col ul {
    width: auto; } }

@media only screen and (min-width: 1024px) {
  .header .close {
    display: none; }
  .header .menuicon {
    display: none; }
  .header .wrapper {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center;
    padding: 25px; }
  .header .menu-list {
    width: 100% !important;
    transition: none !important;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
        flex-direction: row;
    position: inherit;
    background-color: transparent;
    padding-top: 0; }
    .header .menu-list li {
      padding: 0 10px; }
    .header .menu-list a {
      color: #ffffff; }
  .header .navmenu {
    margin-right: 0;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center; }
  .header .logo img {
    width: 100%;
    height: 100%; }
  .col-4 article {
    margin: 20px 65px; } }

@media only screen and (min-width: 1280px) {
  .header .menu-list a {
    padding: 25px; } }

@media only screen and (min-width: 1362px) {
  .col-4 article {
    padding: 0px; }
  .news-list .wrapper {
    padding-bottom: 125px; }
  .news-list article {
    margin: 20px 10px; } }

.location-gallery .location1-img {
  position: relative; }
  .location-gallery .location1-img img {
    display: block;
    margin: 0 auto 15px auto; }

.location-gallery .sheet {
  position: absolute;
  top: -28px;
  left: 62px;
  z-index: -999;
  width: 80%; }

.sheet-text-inner .sheet {
  text-align: center;
  position: relative;
  margin-top: 20px; }
  .sheet-text-inner .sheet div {
    position: absolute;
    top: 31%;
    right: 35%; }

@media only screen and (min-width: 767px) {
  .location-gallery .location1-img div img {
    width: 45%;
    float: left; }
  .location-gallery .location1-img div img:nth-of-type(1) {
    margin-right: 15px; }
  .location-gallery .location1-img .sheet {
    position: absolute;
    top: -28px;
    left: 62px;
    z-index: -999;
    width: 65%; }
  .sheet-text-inner .sheet {
    text-align: right; }
    .sheet-text-inner .sheet div {
      top: 31%;
      right: 19%; } }

@media only screen and (min-width: 1024px) {
  .location-gallery .location1-img .sheet {
    top: -62px; } }

.news p {
  padding: 10px 10px; }

.news1 h3 {
  max-width: 800px;
  margin: 0 auto;
  padding-top: 30px;
  color: #94bc52; }

.news-content .content {
  background-color: #ffffff; }
  .news-content .content img {
    padding-bottom: 20px; }

@media only screen and (min-width: 767px) {
  .news1 h3 {
    padding-top: 60px; } }

@media only screen and (min-width: 1024px) {
  .news p {
    padding: 10px 160px; }
  .news-content .content {
    max-width: 954px;
    margin: 0 auto; }
  .news1 h3 {
    padding-top: 100px; } }

.sheet-top,
.sheet-text,
.sheet1,
.sheet2 {
  width: 150px; }

.accommodation2 {
  height: 585px; }

.accommodation1 small {
  color: #004253; }

.sheet-text .text {
  color: #ffca05; }
  .sheet-text .text span {
    font-size: 1.5em;
    line-height: 0.5em; }

.sheet-text img {
  display: none; }

.col-2 .img-inner-shape {
  width: 320px;
  height: auto;
  display: block;
  margin: 0 auto;
  padding-top: 15px; }

.col-2 .flexslider {
  position: relative;
  margin: 0 7%; }
  .col-2 .flexslider .sheet1 {
    transform: rotate(65deg);
    position: absolute;
    top: -20px;
    left: 20px; }
  .col-2 .flexslider .sheet2 {
    position: absolute;
    right: -37px;
    bottom: 5px; }
    .col-2 .flexslider .sheet2 img {
      width: 50%; }
  .col-2 .flexslider .sheet-left {
    position: absolute;
    left: -8%;
    top: 10%; }

.col-2 .sheet-top {
  transform: rotate(65deg);
  position: absolute;
  top: -10px;
  left: -11px; }

.wpcf7-form {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center; }
  .wpcf7-form p {
    width: 80%;
    margin-top: 2%; }
  .wpcf7-form input {
    box-sizing: border-box;
    width: 100%;
    border: none;
    padding: 10px;
    color: #004253;
    margin-top: 5px; }
  .wpcf7-form label {
    display: inline-block;
    vertical-align: bottom;
    width: 100%; }
  .wpcf7-form input[type=submit] {
    background-color: #ffca05; }

@media only screen and (min-width: 480px) {
  .col-2 .flexslider .sheet1 {
    top: -32px; }
  .col-2 .flexslider .sheet2 {
    right: -54px;
    bottom: 5px; }
    .col-2 .flexslider .sheet2 img {
      width: 50%; }
  .wpcf7-form {
    -ms-flex-align: normal;
        align-items: normal; } }

@media only screen and (min-width: 767px) {
  .col-2 .flexslider {
    margin: 0;
    max-width: 640px;
    max-height: 425px;
    -ms-flex-item-align: center;
        -ms-grid-row-align: center;
        align-self: center; }
  .col-2 .sheet-top {
    top: -44px;
    left: 30px; }
  .sheet-text {
    position: absolute;
    width: 150px;
    height: 128px;
    top: 12px;
    right: -86px; }
    .sheet-text img {
      display: block; }
    .sheet-text .text {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
          flex-direction: column;
      position: relative;
      right: 40px;
      top: -170px;
      color: #004253;
      font-weight: normal; }
  .wpcf7-form {
    -ms-flex-direction: row;
        flex-direction: row; }
    .wpcf7-form p {
      width: 30%;
      margin-left: 10px; } }

@media only screen and (min-width: 767px) {
  .col-2 .flexslider .sheet2 {
    right: -38px;
    bottom: 52px; }
    .col-2 .flexslider .sheet2 img {
      width: 60%; }
  .col-2 .flexslider .sheet1 {
    top: -16px;
    left: 75px; } }

@media only screen and (min-width: 1024px) {
  .col-2 .flexslider {
    -ms-flex-item-align: none;
        -ms-grid-row-align: none;
        align-self: none; }
    .col-2 .flexslider .sheet1 {
      top: -39px;
      left: 42px; }
    .col-2 .flexslider .sheet2 {
      right: -53px;
      bottom: 6px; }
  .col-2 .img-inner-shape {
    width: 100%; }
  .sheet-top {
    width: 200px; } }

@media only screen and (min-width: 1280px) {
  .col-2 .flexslider .sheet1 {
    top: -86px;
    left: -33px; }
  .col-2 .flexslider .sheet2 {
    right: -66px;
    bottom: 40px; }
    .col-2 .flexslider .sheet2 img {
      width: 100%; }
  .col-2 .flexslider .sheet1 {
    width: 295px;
    height: 198px; } }

.border-image {
  background-color: #004253;
  position: relative;
  overflow: hidden;
  height: 250px;
  width: 100%; }
  .border-image .img-shape1 img {
    display: block; }
  .border-image .img-shape1:nth-of-type(1) {
    position: absolute;
    bottom: -102px;
    right: -30px; }
  .border-image .img-shape1:nth-of-type(2) {
    position: absolute;
    right: 120px;
    top: -130px;
    transform: rotateX(-184deg); }
  .border-image .img-shape1:nth-of-type(3) {
    position: absolute;
    top: -57px;
    right: 436px; }
  .border-image .img-shape1:nth-of-type(4) {
    position: absolute;
    bottom: -117px;
    right: 796px; }
  .border-image .img-shape1:nth-of-type(5) {
    position: absolute;
    top: -98px;
    right: 763px;
    transform: rotate(-182deg); }
  .border-image .img-shape1:nth-of-type(6) {
    position: absolute;
    bottom: -156px;
    right: 1166px;
    transform: rotate(-102deg); }
  .border-image .img-shape1:nth-of-type(7) {
    position: absolute;
    right: 1280px;
    top: -50px; }

.section1 p {
  color: #ffffff; }

.section1 h3 {
  color: #94bc52;
  text-transform: none; }

.section2 {
  padding: 10% 0;
  background-color: #004253; }
  .section2 .wrapper > div {
    margin: 5% 0; }
  .section2 .wrapper h5,
  .section2 .wrapper p {
    padding-bottom: 1em; }
  .section2 .wrapper div:nth-of-type(2) {
    -ms-flex-order: 3;
        order: 3; }
  .section2 p {
    color: #ffffff; }
  .section2 svg {
    display: none; }

.shape1,
.shape2,
.shape3,
.shape4 {
  position: absolute;
  z-index: -1;
  width: 80px; }

.section3 {
  position: relative;
  overflow: hidden; }
  .section3 .wrapper {
    text-align: center; }
  .section3 .shape1 {
    top: 87px;
    right: -48px; }
  .section3 .shape2 {
    top: 11px;
    right: 30px; }
  .section3 .shape3 {
    top: 1px;
    left: -59px; }
  .section3 .shape4 {
    left: 1px;
    bottom: 82px; }

.news-list h6 {
  font-size: 1em;
  font-weight: normal;
  color: #004253;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.45;
  letter-spacing: normal;
  padding: 0.5em;
  text-transform: none; }

.section5 {
  background-color: #004253; }
  .section5 p {
    color: #ffffff; }
  .section5 .image-shape1 {
    position: relative;
    right: -97px; }
  .section5 svg {
    width: 532px; }
  .section5 .sheet-text1 {
    /* bottom: -2px; */
    /* bottom: -16px; */
    position: absolute;
    right: 180px;
    width: 244px;
    /* top: 1px; */
    top: 212px; }
  .section5 .image-shape2 {
    display: none; }

.section6 {
  position: relative; }
  .section6 p {
    color: #004253; }
  .section6 .shape6-1,
  .section6 .shape6-2 {
    position: absolute; }
  .section6 .shape6-1 {
    left: 108px;
    transform: rotate(69deg);
    top: 142px; }
  .section6 .shape6-2 {
    bottom: 157px;
    transform: rotate(-117deg); }

.section7 .shape1 {
  top: -80px;
  z-index: 1;
  right: 476px;
  transform: rotate(-69deg); }

.section-contact {
  background-color: #004253;
  position: relative;
  overflow: hidden; }
  .section-contact .col-2 {
    -ms-flex-pack: distribute;
        justify-content: space-around; }
  .section-contact li,
  .section-contact h2,
  .section-contact p {
    color: #ffffff;
    text-align: center; }
  .section-contact label {
    text-align: right; }
  .section-contact li:first-child {
    width: 100%; }
  .section-contact .shape2 {
    bottom: -40px;
    transform: rotate(89deg);
    right: 314px;
    z-index: 2; }
  .section-contact .wpcf7-form {
    -ms-flex-align: center;
        align-items: center; }

.partners {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
      flex-direction: row;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .partners img {
    padding: 15px; }

@media only screen and (min-width: 480px) {
  .section2 .col {
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-pack: justify;
        justify-content: space-between; }
  .section2 .wrapper div:nth-of-type(1) {
    width: 45%;
    margin-left: 20px; }
  .section2 .wrapper div:nth-of-type(3) {
    width: 45%;
    margin-right: 20px; } }

@media only screen and (min-width: 576px) {
  .shape1,
  .shape2,
  .shape3,
  .shape4 {
    width: 150px; }
  .section3 .shape1 {
    top: 94px;
    right: -86px; }
  .section3 .shape3 {
    top: -53px;
    left: -108px; }
  .section-contact .shape2 {
    transform: rotate(89deg);
    right: 738px;
    z-index: 2;
    bottom: -150px; }
  .section5 .image-shape1 {
    right: -178px; }
  .section5 .wrapper svg {
    width: 695px; }
  .section5 .sheet-text1 {
    width: 309px;
    right: 269px; }
  .section5 .image-shape1 {
    right: -266px;
    bottom: -27px; } }

@media only screen and (min-width: 767px) {
  .section6 .shape6-2 {
    bottom: 209px;
    transform: rotate(-117deg);
    right: 165px; }
  .section-contact li,
  .section-contact h2,
  .section-contact p {
    text-align: right; } }

@media only screen and (min-width: 920px) {
  .section2 {
    padding: 0; }
    .section2 image {
      width: 98%;
      height: 102%; }
    .section2 img {
      display: none; }
    .section2 svg {
      display: block;
      width: 711px;
      height: 413px; }
    .section2 .wrapper .col {
      -ms-flex-direction: column;
          flex-direction: column; }
    .section2 .wrapper > div {
      margin: 0;
      width: 33%; }
    .section2 .wrapper div:nth-of-type(2) {
      -ms-flex-order: 0;
          order: 0;
      position: relative;
      right: -146px;
      z-index: 1;
      bottom: -99px; }
    .section2 .wrapper div:nth-of-type(1),
    .section2 .wrapper div:nth-of-type(3) {
      margin-top: 10%;
      z-index: 2; }
    .section2 .wrapper div:nth-of-type(1) {
      width: 30%;
      margin-left: 0; }
    .section2 .wrapper div:nth-of-type(3) {
      width: 30%;
      margin-right: 0; }
  .shape1,
  .shape2,
  .shape3,
  .shape4 {
    width: auto; }
  .section3 .shape1 {
    top: 217px;
    right: -86px; }
  .section3 .shape2 {
    top: 107px;
    right: 142px; }
  .section-contact .shape1 {
    top: -371px;
    right: 454px;
    transform: rotate(-57deg); }
  .section5 .wrapper {
    -ms-flex-direction: row;
        flex-direction: row;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: center;
        justify-content: center; }
  .section7 .shape1 {
    top: -120px;
    z-index: 1;
    right: 495px;
    transform: rotate(-69deg); } }

@media only screen and (min-width: 1024px) {
  .section3 .shape4 {
    bottom: 176px;
    left: 30px; } }

@media only screen and (min-width: 1280px) {
  .section-contact .wpcf7-form {
    -ms-flex-align: normal;
        align-items: normal; }
  .section-contact li:first-child {
    width: 60%; } }

@media only screen and (min-width: 1362px) {
  .section2 image {
    width: auto;
    height: auto; }
  .section2 svg {
    height: 465px; }
  .section2 .wrapper div:nth-of-type(2) {
    bottom: 0px; }
  .section5 {
    overflow: hidden;
    max-height: 454px; }
    .section5 .wrapper > div {
      width: 33.3%; }
    .section5 .wrapper svg {
      width: 695px; }
    .section5 .image-shape2 {
      display: block; }
    .section5 .sheet-text1 {
      width: 309px; }
    .section5 .image-shape1 {
      right: -266px;
      bottom: -27px; }
    .section5 .image-shape2 {
      position: relative;
      bottom: -37px; } }

.contact .contact-form {
  position: relative;
  background-color: #ffffff;
  padding: 0 5% 2% 5% !important;
  margin: 0 auto; }
  .contact .contact-form .wpcf7-form label {
    color: #004253; }
  .contact .contact-form .wpcf7-form input,
  .contact .contact-form .wpcf7-form textarea {
    border: 1px solid #837d73;
    width: 98%;
    max-height: 80px;
    padding: 0; }
  .contact .contact-form .wpcf7-form input[type=submit] {
    background-color: #004253;
    color: #ffffff;
    padding: 9px 40px; }

.contact .text {
  text-align: center; }

.contact .col-2 {
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center; }
  .contact .col-2 .contact-form .wpcf7-form p {
    width: 100%; }

.contact .sheet1,
.contact .sheet2 {
  position: absolute;
  z-index: -1; }

.contact .sheet1 {
  top: -16px;
  transform: rotate(65deg);
  left: 43px; }

.contact .sheet2 {
  right: -44px;
  bottom: 83px;
  transform: rotate(69deg); }

.contact strong {
  color: #004253; }

.contact span,
.contact a {
  color: #004253;
  font-size: 1em;
  font-weight: normal;
  font-stretch: normal;
  line-height: 2;
  letter-spacing: normal; }

.contact a:hover {
  color: #94bc52; }

.google-maps iframe {
  width: 100%;
  min-height: 451px; }

@media only screen and (min-width: 767px) {
  .contact .col-2 .contact-form {
    width: 80%; }
    .contact .col-2 .contact-form .wpcf7-form p {
      width: auto; }
    .contact .col-2 .contact-form p:nth-of-type(1),
    .contact .col-2 .contact-form p:nth-of-type(2) {
      width: 100%; }
    .contact .col-2 .contact-form p:nth-of-type(3) {
      width: 100%; }
    .contact .col-2 .contact-form .sheet1 {
      top: -33px; }
    .contact .col-2 .contact-form .sheet2 {
      right: -74px; }
  .contact .text {
    text-align: right; }
  .contact-form textarea {
    width: 98%; } }

@media only screen and (min-width: 920px) {
  .contact .col-2 .contact-form p:nth-of-type(1),
  .contact .col-2 .contact-form p:nth-of-type(2) {
    width: 47%; } }

@media only screen and (min-width: 1280px) {
  .contact .contact-form {
    width: 80%; }
    .contact .contact-form .sheet1 {
      top: -49px; }
    .contact .contact-form .sheet2 {
      right: -97px; } }

.landing-page {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center; }
  .landing-page h1 {
    font-size: 3.875em; }
  .landing-page h5 {
    text-transform: uppercase;
    padding-bottom: 1em; }
  .landing-page .button {
    margin-top: auto; }
    .landing-page .button a {
      text-transform: uppercase;
      padding: 10px 30px; }
  .landing-page .col1,
  .landing-page .col2 {
    padding: 10% 6%;
    height: 70vh; }
    .landing-page .col1 > div,
    .landing-page .col2 > div {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
          flex-direction: column;
      -ms-flex-align: stretch;
          align-items: stretch;
      min-height: 450px; }
      .landing-page .col1 > div p,
      .landing-page .col2 > div p {
        margin-bottom: 60px; }
  .landing-page .col1 {
    background-color: #004253; }
    .landing-page .col1 h1,
    .landing-page .col1 p {
      color: #ffffff; }
    .landing-page .col1 h5 {
      color: #ffca05; }
    .landing-page .col1 .button a {
      color: #004253;
      background-color: #94bc52; }
  .landing-page .col2 {
    background-color: #94bc52; }
    .landing-page .col2 .button {
      color: #ffffff; }
      .landing-page .col2 .button a {
        background-color: #004253; }

@media only screen and (min-width: 767px) {
  .landing-page {
    -ms-flex-direction: row;
        flex-direction: row; }
    .landing-page .col1,
    .landing-page .col2 {
      width: 50%;
      height: 100vh; }
      .landing-page .col1 > div,
      .landing-page .col2 > div {
        min-height: 500px; } }

.section6 .flex-caption {
  background-color: #ffffff;
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding: 2%;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center; }
  .section6 .flex-caption > div {
    width: 90%;
    background-color: #ffffff;
    position: relative;
    top: -50px; }

.section6 .flex-direction-nav {
  position: absolute;
  right: 50%; }
  .section6 .flex-direction-nav .flex-prev {
    left: 0px !important;
    margin: -50px 10px; }
  .section6 .flex-direction-nav .flex-next {
    margin: -49px; }

.section6 .flexslider {
  background-color: transparent; }
  .section6 .flexslider .flex-caption {
    margin-top: 150px; }
  .section6 .flexslider .slides img {
    width: auto !important;
    border-radius: 50%;
    margin: 0 auto;
    position: relative;
    top: -92px;
    z-index: 999; }

@media only screen and (min-width: 767px) {
  .section6 {
    position: relative;
    z-index: 999; }
    .section6 .flexslider {
      margin: 60px; }
      .section6 .flexslider .flex-caption {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
        padding: 2%;
        right: 0;
        bottom: 0;
        -ms-flex-pack: center;
            justify-content: center; }
        .section6 .flexslider .flex-caption > div {
          width: 75%; } }

@media only screen and (min-width: 1100px) {
  .section6 .flexslider .flex-caption {
    margin: 0 114px 0 78px;
    z-index: -1; }
    .section6 .flexslider .flex-caption > div {
      width: 60%;
      margin-top: 0;
      top: 0;
      right: -60px; }
  .section6 .flexslider .slides img {
    width: auto !important;
    border-radius: 50%;
    margin: 0 auto;
    position: relative;
    right: -135px;
    top: 0; }
  .section6 .flex-direction-nav {
    position: static;
    right: 0; }
    .section6 .flex-direction-nav .flex-prev {
      margin: -20px 0 0; }
    .section6 .flex-direction-nav .flex-next {
      margin: -50px 0 0; } }

.col-2 .flex-direction-nav .flex-prev {
  right: 0px;
  top: 103%;
  opacity: .8; }

.col-2 .flex-direction-nav .flex-next {
  opacity: .8;
  text-align: left;
  right: 50px;
  margin: -50px 0 0; }

.col-2 .flexslider:hover .flex-direction-nav .flex-prev {
  opacity: 0.7;
  right: 0; }

.col-2 .flexslider:hover .flex-direction-nav .flex-prev:hover {
  opacity: 1; }

.col-2 .flexslider:hover .flex-direction-nav .flex-next {
  opacity: 0.7;
  right: 50px; }

.col-2 .flexslider:hover .flex-direction-nav .flex-next:hover {
  opacity: 1; }

.col-2 .flex-direction-nav a {
  position: relative;
  margin: 10px 0 10px 0; }

.col-2 .flex-control-nav {
  display: none; }

/*# sourceMappingURL=data:application/json;base64, */