/* Extra small devices (phones, 600px and down) */
/* Small devices (portrait tablets and large phones, 600px and up) */
/* Medium devices (landscape tablets, 768px and up) */
.background-wave {
  position: relative;
  width: 100%;
  min-height: 400px;
  background-color: #004253; }

.background-wave:before {
  content: "";
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 350px;
  background: url("/images/hero-background.png");
  background-size: cover;
  background-repeat: no-repeat;
  z-index: 1; }

.section7 {
  position: relative;
  width: 100%;
  height: 181px;
  background-color: #004253;
  overflow: hidden; }

.section7:after {
  content: "";
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 210px;
  background-color: green;
  background: url("/images/hero-background2.png");
  background-size: cover;
  background-repeat: no-repeat;
  z-index: 2; }

.col {
  overflow: hidden;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: center;
      justify-content: center; }

.col-2 {
  padding: 7% 0;
  box-sizing: border-box; }
  .col-2 > div:first-of-type {
    margin-bottom: 5%; }
  .col-2 > div:nth-of-type(2n) {
    margin-top: 5%; }
  .col-2 .text {
    margin: 0 5%; }

.background-img-shapes {
  background-color: #004253; }
  .background-img-shapes p {
    color: #ffffff; }
  .background-img-shapes h5 {
    color: #ffca05; }
  .background-img-shapes h3 {
    color: #ffffff; }
  .background-img-shapes .img-shape {
    display: none; }
  .background-img-shapes .col-1,
  .background-img-shapes .col-2,
  .background-img-shapes .col-3 {
    padding: 10% 0; }
    .background-img-shapes .col-1 li,
    .background-img-shapes .col-2 li,
    .background-img-shapes .col-3 li {
      color: #ffffff;
      background-color: rgba(0, 66, 84, 0.6) !important;
      z-index: 999;
      margin-top: 30px;
      color: #ffffff; }

@media only screen and (min-width: 576px) {
  .background-img-shapes {
    position: relative;
    overflow: hidden; }
    .background-img-shapes .img-shape {
      position: absolute;
      display: block; }
      .background-img-shapes .img-shape svg {
        width: 80%; }
    .background-img-shapes .img-shape:nth-of-type(1) {
      transform: rotate(-120deg);
      top: -48px;
      right: -348px; }
    .background-img-shapes .img-shape:nth-of-type(2) {
      top: 285px;
      right: -238px; }
    .background-img-shapes .img-shape:nth-of-type(3) {
      top: 691px;
      right: -76px; }
    .background-img-shapes .img-shape:nth-of-type(4) {
      top: 815px;
      right: -220px;
      transform: rotate(8deg); }
    .background-img-shapes .img-shape:nth-of-type(5) {
      transform: rotate(-164deg);
      top: -185px;
      left: 50px; }
    .background-img-shapes .img-shape:nth-of-type(6) {
      bottom: -153px;
      left: 25%;
      transform: rotate(-76deg); }
    .background-img-shapes .img-shape:nth-of-type(n+7) {
      display: none; }
    .background-img-shapes .col-1 {
      width: 308px;
      margin-right: auto;
      padding: 10% 0; }
      .background-img-shapes .col-1 ul {
        margin: 0 15px; }
    .background-img-shapes .col-2 {
      width: 60%;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
          flex-direction: column;
      -ms-flex-pack: distribute;
          justify-content: space-around;
      margin-right: auto; }
    .background-img-shapes .col-3 {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
          flex-direction: column;
      width: 60%;
      margin-right: auto; }
      .background-img-shapes .col-3 li {
        width: auto; } }

@media only screen and (min-width: 767px) {
  .background-img-shapes .col-1 {
    width: 60%; }
  .background-img-shapes .col-2 {
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    width: 70%; }
    .background-img-shapes .col-2 li {
      width: 40%;
      padding: 10px 25px; }
  .background-img-shapes .col-3 {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
  .section1.background-wave {
    min-height: 720px; }
  .background-wave {
    min-height: 450px; }
  .col-2 {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-align: center;
        align-items: center; }
    .col-2 > div {
      width: 50%; }
      .col-2 > div:first-of-type {
        margin-left: 5%;
        margin-bottom: 0; }
      .col-2 > div:nth-of-type(2n) {
        margin-right: 0;
        margin-top: 0; } }

@media only screen and (min-width: 920px) {
  .background-img-shapes .col-1 {
    margin-right: auto; }
  .background-img-shapes .img-shape:nth-of-type(2) {
    top: 255px; }
  .background-img-shapes .img-shape:nth-of-type(5) {
    top: -177px;
    left: 25%; }
  .background-img-shapes .img-shape:nth-of-type(7) {
    top: -60px;
    left: -362px; }
  .background-img-shapes .img-shape:nth-of-type(8) {
    transform: rotate(77deg);
    left: -330px;
    top: 108px; }
  .background-img-shapes .img-shape:nth-of-type(9) {
    top: 800px;
    left: -60px; }
  .col {
    -ms-flex-direction: row;
        flex-direction: row; } }

@media only screen and (min-width: 1024px) {
  .col-2 {
    -ms-flex-align: normal;
        align-items: normal; }
  .background-img-shapes .col-3 {
    width: 90%;
    -ms-flex-pack: end;
        justify-content: flex-end; }
    .background-img-shapes .col-3 li {
      width: auto;
      padding: 0 15px; }
  .section7 {
    height: 228px; }
  .section7:after {
    height: 282px; } }

@media only screen and (min-width: 1280px) {
  .background-img-shapes .img-shape:nth-of-type(n+7) {
    display: block; }
  .background-img-shapes .col-1 {
    width: 60%;
    margin: 0 auto; }
  .background-img-shapes .img-shape:nth-of-type(2) {
    top: 325px; }
  .background-img-shapes .img-shape:nth-of-type(3) {
    right: -76px;
    top: 821px; }
  .background-img-shapes .img-shape:nth-of-type(4) {
    top: 962px; }
  .background-img-shapes .img-shape:nth-of-type(7) {
    left: -326px; }
  .background-img-shapes .img-shape:nth-of-type(8) {
    top: 184px; }
  .background-img-shapes .img-shape svg {
    width: 90%; }
  .background-img-shapes .col-2 {
    -ms-flex-pack: distribute;
        justify-content: space-around;
    margin: auto;
    width: 80%; }
    .background-img-shapes .col-2 li {
      width: 40%; }
  .background-img-shapes .col-3 {
    width: 90%;
    margin: auto;
    -ms-flex-pack: distribute;
        justify-content: space-around; }
    .background-img-shapes .col-3 li {
      width: auto; } }

@media only screen and (min-width: 1280px) {
  .background-wave {
    min-height: 450px; }
  .background-wave:before {
    height: 450px; } }

@media only screen and (min-width: 1362px) {
  .section7 {
    height: 258px; }
  .section7:after {
    height: 316px; } }

.col-4 {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around; }
  .col-4 article {
    max-width: 305px;
    margin: 0 auto;
    margin-bottom: 30px; }
    .col-4 article:hover {
      box-shadow: 0 4px 18px 0 rgba(207, 204, 200, 0.3); }
    .col-4 article h4 {
      background-color: #ffffff; }

*,
body,
html {
  margin: 0;
  padding: 0;
  font-family: 'Open Sans', sans-serif;
  color: #004253;
  font-size: 14px; }

body {
  background-color: #faf9f7; }

a {
  background: transparent;
  color: #ffffff;
  font-family: 'Open Sans', sans-serif;
  font-weight: 800; }
  a:hover {
    color: #94bc52; }

ul,
li {
  text-decoration: none;
  list-style: none;
  display: block;
  font-size: 1em;
  background: transparent;
  color: #ffffff;
  font-family: 'Open Sans', sans-serif;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: 2.13;
  letter-spacing: normal;
  color: #004253; }

h1,
h2,
h3,
h4,
h6 {
  font-weight: 800;
  color: #004253;
  padding: 0 0 1.5em 0; }

h3 {
  text-transform: uppercase; }

h4 {
  padding: 10px; }
  h4 a {
    color: #004253; }

h1 {
  font-size: 50px; }

h2 {
  font-size: 2.25em;
  text-align: center;
  text-transform: uppercase;
  line-height: 1.22;
  letter-spacing: 3.4px;
  font-weight: 800; }

h3 {
  font-size: 2.125em;
  text-transform: uppercase;
  line-height: 1.29;
  letter-spacing: 3.4px; }

h4 {
  font-size: 1.375em; }

h5 {
  font-size: 1.5em;
  color: #ffca05;
  font-weight: 800;
  letter-spacing: 2.2px;
  text-transform: uppercase; }

h6 {
  font-size: 1.2em; }

p {
  font-size: 1em;
  padding-bottom: 1.5625em;
  color: #004253;
  line-height: 1.56; }
  p:last-of-type {
    padding-bottom: 0; }

a {
  font-size: 18px;
  text-decoration: none; }

img {
  max-width: 100%;
  vertical-align: bottom;
  width: auto; }

small {
  font-size: 14px; }

video {
  width: 90%;
  height: auto; }

.clearfix {
  content: "";
  display: table;
  clear: both; }

.wrapper {
  width: 90%;
  margin: 0 auto; }

.button {
  color: #94bc52;
  text-transform: uppercase;
  padding: 15px 0; }
  .button span {
    margin-right: 7px;
    color: #94bc52; }

.video {
  max-width: 640px;
  max-height: 420px; }

.padding {
  padding: 5% 0; }

@media only screen and (min-width: 767px) {
  *,
  body,
  html {
    font-size: 16px; } }

@media only screen and (min-width: 1362px) {
  .wrapper {
    max-width: 1300px; } }

.menuicon div {
  width: 35px;
  height: 5px;
  background-color: #94bc52;
  margin: 6px 0; }

.header {
  background-color: #004253;
  position: relative;
  z-index: 1000; }
  .header .wrapper {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center; }
  .header .menu-list {
    display: none; }
    .header .menu-list a {
      padding: 8px 5px; }
  .header .navmenu {
    margin-right: auto;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center; }
    .header .navmenu .lang {
      margin-right: 20px; }
  .header #lang {
    padding: 30px 0;
    font-size: 18px; }
  .header .logo img {
    width: 180px;
    height: 40px; }

.header-bottom {
  position: relative;
  overflow: hidden;
  background-color: #004253;
  color: #ffffff; }
  .header-bottom .image-shape1 {
    position: absolute;
    bottom: -75px;
    right: -165px;
    transform: rotateY(178deg); }
  .header-bottom .image-shape2 {
    position: absolute;
    right: 817px;
    bottom: -18px;
    transform: rotate(30deg); }
  .header-bottom h1,
  .header-bottom h3 {
    padding-top: 5%;
    color: #94bc52;
    text-align: right;
    vertical-align: center;
    text-transform: uppercase; }
  .header-bottom h3 {
    width: 70%;
    text-transform: none; }

.section1 h3 {
  color: #94bc52;
  text-transform: none; }

.section1 .video {
  text-align: center; }

.news-list {
  position: relative; }
  .news-list .wrapper {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: center;
        justify-content: center; }

.section6 {
  background-color: #faf9f7; }
  .section6 .wrapper {
    padding: 50px 0;
    position: relative; }
  .section6 .flexslider {
    z-index: 1000; }
  .section6 .green-sheet,
  .section6 .yellow-sheet {
    z-index: 1000;
    width: 190px;
    height: 193px; }
  .section6 .yellow-sheet {
    bottom: 80px;
    right: 50px; }
  .section6 .green-sheet {
    left: 50px;
    bottom: 50%;
    transform: rotate(-180deg); }

.footer {
  position: relative;
  overflow: hidden;
  padding: 7%;
  background-color: #004253; }
  .footer p {
    color: #ffffff; }
  .footer .col {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center; }
  .footer .yellow-sheet {
    position: absolute;
    right: -100px;
    transform: rotate(46deg); }
  .footer .green-sheet {
    position: absolute;
    left: -120px;
    bottom: 0;
    transform: rotate(-72deg); }

#lang {
  background-color: #004253;
  color: #ffffff;
  font-weight: 800;
  border: none;
  margin-right: 10px; }
  #lang option {
    color: #ffffff;
    border: none; }
  #lang select:focus {
    border: 2px solid red; }

@media only screen and (min-width: 480px) {
  .header-bottom .image-shape1 {
    right: -74px; } }

@media only screen and (min-width: 576px) {
  .footer .col {
    margin: 0 50px;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-align: normal;
        align-items: normal;
    -ms-flex-pack: justify;
        justify-content: space-between; } }

@media only screen and (min-width: 767px) {
  .header-bottom .image-shape1 {
    right: 300px; }
  .footer .wrapper {
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-align: stretch;
        align-items: stretch; }
    .footer .wrapper span {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
          flex-direction: column;
      margin-top: 30px; } }

@media only screen and (min-width: 1024px) {
  .header .close {
    display: none; }
  .header .menuicon {
    display: none; }
  .header .wrapper {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center;
    padding: 25px; }
  .header .menu-list {
    display: block;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
        flex-direction: row; }
    .header .menu-list li {
      padding: 0 10px; }
  .header .navmenu {
    margin-right: 0;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center; }
  .header .logo img {
    width: 100%;
    height: 100%; }
  .col-4 article {
    margin: 20px 65px; } }

@media only screen and (min-width: 1280px) {
  .header .menu-list a {
    padding: 25px; } }

@media only screen and (min-width: 1362px) {
  .col-4 article {
    padding: 0px; }
  .news-list .wrapper {
    padding-bottom: 125px; }
  .news-list article {
    margin: 20px 10px; } }

.location-gallery .location1-img {
  position: relative; }
  .location-gallery .location1-img img {
    margin-bottom: 15px;
    display: block; }

.location-gallery .sheet {
  position: absolute;
  top: -28px;
  left: 62px;
  z-index: -999;
  width: 80%; }

.sheet-text-inner .sheet {
  text-align: center;
  position: relative;
  margin-top: 20px; }
  .sheet-text-inner .sheet div {
    position: absolute;
    top: 31%;
    right: 35%; }

@media only screen and (min-width: 767px) {
  .location-gallery .location1-img div img {
    width: 45%;
    float: left; }
  .location-gallery .location1-img div img:nth-of-type(1) {
    margin-right: 15px; }
  .location-gallery .location1-img .sheet {
    position: absolute;
    top: -28px;
    left: 62px;
    z-index: -999;
    width: 65%; }
  .sheet-text-inner .sheet {
    text-align: right; }
    .sheet-text-inner .sheet div {
      top: 31%;
      right: 19%; } }

@media only screen and (min-width: 1024px) {
  .location-gallery .location1-img .sheet {
    top: -62px; } }

.news p {
  padding: 10px 10px; }

.news1 h3 {
  max-width: 800px;
  margin: 0 auto;
  padding-top: 30px;
  color: #94bc52; }

.news-content .content {
  background-color: #ffffff; }
  .news-content .content img {
    padding-bottom: 20px; }

@media only screen and (min-width: 767px) {
  .news1 h3 {
    padding-top: 60px; } }

@media only screen and (min-width: 1024px) {
  .news p {
    padding: 10px 160px; }
  .news-content .content {
    max-width: 954px;
    margin: 0 auto; }
  .news1 h3 {
    padding-top: 100px; } }

.sheet-text {
  position: absolute;
  width: 150px;
  height: 128px;
  right: -60px;
  top: 39px; }
  .sheet-text .text {
    position: relative;
    right: 11px;
    bottom: 160px; }

.accommodation2 {
  height: 585px; }

.col-2 .img-inner-shape {
  width: 320px;
  height: auto;
  display: block;
  margin: 0 auto;
  padding-top: 15px; }

.col-2 .flexslider {
  position: relative;
  margin: 0 7%; }
  .col-2 .flexslider .sheet1 {
    border-radius: 0% 100% 9% 88% / 0% 58% 54% 100%;
    width: 200px;
    height: 105px;
    background-color: #94bc52;
    position: absolute;
    left: 0;
    transform: rotate(-350deg);
    top: 0; }
  .col-2 .flexslider .sheet2 {
    position: absolute;
    right: -37px;
    bottom: 73px; }
    .col-2 .flexslider .sheet2 img {
      width: 50%; }
  .col-2 .flexslider .sheet-left {
    position: absolute;
    left: -8%;
    top: 10%; }

.col-2 .sheet-top {
  border-radius: 44% 50% 20% 67% / 3% 56% 3% 96%;
  width: 190px;
  height: 190px;
  background-color: #94bc52;
  position: absolute;
  top: -10px;
  left: 30px; }

@media only screen and (min-width: 480px) {
  .col-2 .flexslider .sheet1 {
    top: -14px; }
  .col-2 .flexslider .sheet2 {
    right: -54px;
    bottom: 119px; }
    .col-2 .flexslider .sheet2 img {
      width: 50%; } }

@media only screen and (min-width: 767px) {
  .col-2 .flexslider {
    margin: 0;
    max-width: 640px;
    max-height: 425px;
    -ms-flex-item-align: center;
        -ms-grid-row-align: center;
        align-self: center; }
  .col-2 .sheet-top {
    top: -44px;
    left: 30px; }
  .sheet-text {
    right: -44px;
    top: 15px; } }

@media only screen and (min-width: 767px) {
  .col-2 .flexslider .sheet2 {
    right: -38px;
    bottom: 52px; }
    .col-2 .flexslider .sheet2 img {
      width: 60%; }
  .col-2 .flexslider .sheet1 {
    top: -16px;
    left: 75px; } }

@media only screen and (min-width: 1024px) {
  .col-2 .flexslider {
    -ms-flex-item-align: none;
        -ms-grid-row-align: none;
        align-self: none; }
  .col-2 .img-inner-shape {
    width: 100%; } }

@media only screen and (min-width: 1280px) {
  .col-2 .flexslider .sheet2 {
    right: -66px;
    bottom: 40px; }
    .col-2 .flexslider .sheet2 img {
      width: 100%; }
  .col-2 .flexslider .sheet1 {
    width: 295px;
    height: 198px; } }

.border-image {
  background-color: #004253;
  position: relative;
  overflow: hidden;
  height: 250px;
  width: 100%; }
  .border-image .img-shape1 img {
    display: block; }
  .border-image .img-shape1:nth-of-type(1) {
    position: absolute;
    bottom: -102px;
    right: -30px; }
  .border-image .img-shape1:nth-of-type(2) {
    position: absolute;
    right: 120px;
    top: -130px;
    transform: rotateX(-184deg); }
  .border-image .img-shape1:nth-of-type(3) {
    position: absolute;
    top: -57px;
    right: 436px; }
  .border-image .img-shape1:nth-of-type(4) {
    position: absolute;
    bottom: -117px;
    right: 796px; }
  .border-image .img-shape1:nth-of-type(5) {
    position: absolute;
    top: -98px;
    right: 763px;
    transform: rotate(-182deg); }
  .border-image .img-shape1:nth-of-type(6) {
    position: absolute;
    bottom: -156px;
    right: 1166px;
    transform: rotate(-102deg); }
  .border-image .img-shape1:nth-of-type(7) {
    position: absolute;
    right: 1280px;
    top: -50px; }

.section2 {
  background-color: #004253; }
  .section2 .wrapper div:nth-of-type(2) {
    -ms-flex-order: 3;
        order: 3; }
  .section2 .wrapper div:nth-of-type(1) {
    margin: 10% 0 5% 0; }
  .section2 .wrapper div:nth-of-type(3) {
    margin: 10% 0 5% 0; }
  .section2 p {
    color: #ffffff; }
  .section2 image {
    width: auto;
    height: auto; }
  .section2 svg {
    width: 711px;
    height: 465px; }

.shape1,
.shape2,
.shape3,
.shape4 {
  position: absolute;
  z-index: -1;
  width: 80px; }

.section3 {
  position: relative;
  overflow: hidden; }
  .section3 .wrapper {
    text-align: center; }
  .section3 .shape1 {
    top: 87px;
    right: -48px; }
  .section3 .shape2 {
    top: 11px;
    right: 30px; }
  .section3 .shape3 {
    top: 1px;
    left: -59px; }
  .section3 .shape4 {
    left: 1px;
    bottom: 82px; }

.section5 {
  background-color: #004253;
  overflow: hidden;
  min-height: 500px;
  position: relative; }
  .section5 p {
    color: #ffffff; }
  .section5 .image-shape2 {
    display: none; }

.section7 .shape1 {
  top: -80px;
  z-index: 1;
  right: 476px;
  transform: rotate(-69deg); }

.section-contact {
  background-color: #004253;
  position: relative;
  overflow: hidden; }
  .section-contact .col-2 {
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: stretch;
        align-items: stretch;
    padding: 0 10% 10% 10%; }
  .section-contact li, .section-contact h2 {
    color: #ffffff; }
  .section-contact .shape2 {
    bottom: -40px;
    transform: rotate(89deg);
    right: 314px;
    z-index: 2; }

.partners {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
      flex-direction: row;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .partners img {
    padding: 15px; }

@media only screen and (min-width: 576px) {
  .shape1,
  .shape2,
  .shape3,
  .shape4 {
    width: 150px; }
  .section3 .shape1 {
    top: 94px;
    right: -86px; }
  .section3 .shape3 {
    top: -53px;
    left: -108px; }
  .section-contact .shape2 {
    transform: rotate(89deg);
    right: 738px;
    z-index: 2;
    bottom: -150px; } }

@media only screen and (min-width: 767px) {
  .section5 div:nth-of-type(2) {
    width: 50%;
    margin-right: auto;
    padding: 50px; } }

@media only screen and (min-width: 920px) {
  .section2 .wrapper div:nth-of-type(2) {
    -ms-flex-order: inherit;
        order: inherit; }
  .shape1,
  .shape2,
  .shape3,
  .shape4 {
    width: auto; }
  .section3 .shape1 {
    top: 217px;
    right: -86px; }
  .section3 .shape2 {
    top: 107px;
    right: 142px; }
  .section-contact .shape1 {
    top: -371px;
    right: 454px;
    transform: rotate(-57deg); }
  .section7 .shape1 {
    top: -120px;
    z-index: 1;
    right: 495px;
    transform: rotate(-69deg); } }

@media only screen and (min-width: 1024px) {
  .section3 .shape4 {
    bottom: 176px;
    left: 30px; }
  .section5 .image-shape2 {
    display: block; } }

.contact .contact-form {
  position: relative;
  width: 70%;
  background-color: #ffffff;
  padding: 5% !important;
  margin: 0 auto; }

.contact .col-2 {
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center; }

.contact .sheet1,
.contact .sheet2 {
  position: absolute;
  z-index: -1; }

.contact .sheet1 {
  top: -16px;
  transform: rotate(65deg);
  left: 43px; }

.contact .sheet2 {
  right: -44px;
  bottom: 83px;
  transform: rotate(69deg); }

.google-maps iframe {
  width: 100%;
  min-height: 451px; }

@media only screen and (min-width: 767px) {
  .contact .contact-form .sheet1 {
    top: -33px; }
  .contact .contact-form .sheet2 {
    right: -74px; } }

@media only screen and (min-width: 1280px) {
  .contact .contact-form .sheet1 {
    top: -49px; }
  .contact .contact-form .sheet2 {
    right: -97px; } }

.landing-page {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center; }
  .landing-page h1 {
    font-size: 3.875em; }
  .landing-page h5 {
    text-transform: uppercase;
    padding-bottom: 1em; }
  .landing-page .button {
    margin-top: auto; }
    .landing-page .button a {
      text-transform: uppercase;
      padding: 10px 30px; }
  .landing-page .col1,
  .landing-page .col2 {
    padding: 10% 6%;
    height: 70vh; }
    .landing-page .col1 > div,
    .landing-page .col2 > div {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
          flex-direction: column;
      -ms-flex-align: stretch;
          align-items: stretch;
      min-height: 450px; }
      .landing-page .col1 > div p,
      .landing-page .col2 > div p {
        margin-bottom: 60px; }
  .landing-page .col1 {
    background-color: #004253; }
    .landing-page .col1 h1,
    .landing-page .col1 p {
      color: #ffffff; }
    .landing-page .col1 h5 {
      color: #ffca05; }
    .landing-page .col1 .button a {
      color: #004253;
      background-color: #94bc52; }
  .landing-page .col2 {
    background-color: #94bc52; }
    .landing-page .col2 .button {
      color: #ffffff; }
      .landing-page .col2 .button a {
        background-color: #004253; }

@media only screen and (min-width: 767px) {
  .landing-page {
    -ms-flex-direction: row;
        flex-direction: row; }
    .landing-page .col1,
    .landing-page .col2 {
      width: 50%;
      height: 100vh; }
      .landing-page .col1 > div,
      .landing-page .col2 > div {
        min-height: 500px; } }

.section6 .flex-caption {
  background-color: #ffffff;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding: 2%;
  right: 0;
  bottom: 0;
  -ms-flex-pack: center;
      justify-content: center; }
  .section6 .flex-caption p {
    width: 90%;
    background-color: #ffffff; }

.section6 .flex-direction-nav .flex-prev {
  left: 0px !important; }

.section6 .flexslider .slides img {
  width: auto !important;
  border-radius: 50%;
  margin: 0 auto;
  position: relative;
  right: -50px; }

@media only screen and (min-width: 767px) {
  .section6 {
    position: relative;
    z-index: 999; }
    .section6 .flexslider {
      margin: 60px; }
      .section6 .flexslider .flex-caption {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
        padding: 2%;
        right: 0;
        bottom: 0;
        -ms-flex-pack: center;
            justify-content: center; }
        .section6 .flexslider .flex-caption p {
          width: 70%; } }

.col-2 .flex-direction-nav .flex-prev {
  right: 0px;
  top: 103%;
  opacity: .8; }

.col-2 .flex-direction-nav .flex-next {
  opacity: .8;
  text-align: left;
  right: 50px;
  margin: -50px 0 0; }

.col-2 .flexslider:hover .flex-direction-nav .flex-prev {
  opacity: 0.7;
  right: 0; }

.col-2 .flexslider:hover .flex-direction-nav .flex-prev:hover {
  opacity: 1; }

.col-2 .flexslider:hover .flex-direction-nav .flex-next {
  opacity: 0.7;
  right: 50px; }

.col-2 .flexslider:hover .flex-direction-nav .flex-next:hover {
  opacity: 1; }

.col-2 .flex-direction-nav a {
  position: relative;
  margin: 10px 0 10px 0; }

.col-2 .flex-control-nav {
  display: none; }

/*# sourceMappingURL=data:application/json;base64, */